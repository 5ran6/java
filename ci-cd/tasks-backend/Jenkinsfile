pipeline {
  agent any
  tools {
    maven 'MAVEN_LOCAL'
  }
  stages {
    stage ('Build BackEnd') {
      steps {
        sh 'mvn clean package -DskipTests=true'
      }
    }
    stage ('Unit Tests') {
      steps {
        sh 'mvn test'
      }
    }
    stage ('Sonar Analysis') {
      environment {
        scannerHome = tool 'SONAR_SCANNER'
      }
      steps {
        withSonarQubeEnv('SONAR_LOCAL') {
          sh "${scannerHome}/bin/sonar-scanner -e -Dsonar.projectKey=DeployBack -Dsonar.host.url=http://localhost:9000 -Dsonar.login=e199f2aab236ec28af33436d8ef4b52a788b9fc3 -Dsonar.java.binaries=target -Dsonar.coverage.exclusions=**/mvn/**,**/src/test**,**/mode/**,**Application.java**"
        }
      }
    }
    stage('Quality') {
      steps {
        sleep(5)
        timeout(time: 1, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }
    stage('Deploy BackEnd') {
      steps {
        deploy adapters: [tomcat9(credentialsId: 'Tomcat_login', path: '', url: 'http://localhost:8089/')], contextPath: 'tasks-backend', war: 'target/tasks-backend.war'
      }
    }
    stage('API Test') {
      steps {
        dir('api-test') {
          git credentialsId: 'github_login', url: 'https://github.com/bonejah/tasks-api'
          sh 'mvn test'
        }
      }
    }
    stage('Deploy FrontEnd') {
      steps {
        dir('frontend') {
          git credentialsId: 'github_login', url: 'https://github.com/bonejah/tasks-frontend'
          sh 'mvn clean package'
          deploy adapters: [tomcat9(credentialsId: 'Tomcat_login', path: '', url: 'http://localhost:8089/')], contextPath: 'tasks', war: 'target/tasks.war'
        }  
      }
    }
    stage('Functional Test') {
      steps {
        dir('functional-test') {
          git credentialsId: 'github_login', url: 'https://github.com/bonejah/tasks-functional-tasks'
          sh 'mvn test'
        }
      }
    }
  }
  post {
    always {
      junit allowEmptyResults: true, testResults: 'target/surefire-reports/*.xml, api-test/target/surefire-reports/*.xml, functional-test/target/surefire-reports/*.xml'
      archiveArtifacts artifacts: 'target/tasks-backend.war, frontend/target/tasks.war', onlyIfSuccessful: true
    }
    unsuccessful {
      emailext body: 'See the attached log below', subject: 'Builde $BUILD_NUMBER has failed', to: 'brunopclima81jenkins@gmail.com'
    }
    fixed {
      emailext body: 'See the attached log below', subject: 'Builde is fine!!!', to: 'brunopclima81jenkins@gmail.com'
    }
  }
}


